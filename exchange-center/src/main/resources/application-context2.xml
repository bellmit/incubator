<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/data/jpa
     http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://mybatis.org/schema/mybatis-spring
     http://mybatis.org/schema/mybatis-spring.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName}"/> <property 
		name="url" value="${jdbc.url}"/> <property name="username" value="${jdbc.username}"/> 
		<property name="password" value="${jdbc.password}"/> <property name="initialSize" 
		value="12"/> <property name="maxActive" value="15"/> <property name="maxIdle" 
		value="3"/> <property name="minIdle" value="1"/> <property name="maxWait" 
		value="12"/> </bean> <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName}"/> <property 
		name="url" value="${jdbc.url}"/> <property name="username" value="${jdbc.username}"/> 
		<property name="password" value="${jdbc.password}"/> </bean> -->



	<bean id="exchangeOneXaDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="mysql/exchangeOne" />
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">gavin</prop>
				<prop key="password">123456</prop>
				<prop key="serverName">localhost</prop>
				<prop key="portNumber">3306</prop>
				<prop key="databaseName">exchangeone</prop>
			</props>
		</property>
		<property name="poolSize" value="10" />
		<property name="reapTimeout" value="20000" />
	</bean>

	<bean id="exchangeTwoXaDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="mysql/exchangeTwo" />
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">gavin</prop>
				<prop key="password">123456</prop>
				<prop key="serverName">localhost</prop>
				<prop key="portNumber">3306</prop>
				<prop key="databaseName">exchangetwo</prop>
			</props>
		</property>
		<property name="poolSize" value="10" />
		<property name="reapTimeout" value="20000" />
	</bean>

	<!-- atomikos事务管理 -->
	<bean id="atomikosUserTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager">
		<description>UserTransactionManager</description>
		<property name="startupTransactionService" value="true" />
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosUserTransactionManager"></property>
		<property name="userTransaction" ref="atomikosUserTransaction"></property>
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>


	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->


	<!-- <tx:jta-transaction-manager/> -->

	<!-- ########################################################## -->
	<!-- MyBatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="exchangeTwoXaDataSource" />
		<property name="typeAliasesPackage" value="com.gl.exchange.model" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.gl.exchange.dao" />
	</bean>

	<!-- ########################################################## -->
	<!-- Spring data JPA -->
	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
		<property name="showSql" value="true" />
		<property name="generateDdl" value="true" />
	</bean>

	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

<!-- 
	<bean id="atomikosJtaPlatform" class="org.lmc.platform.jta.AtomikosJtaPlatform">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
	</bean>
 -->

	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jtaDataSource" ref="exchangeOneXaDataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="jpaDialect" ref="jpaDialect" />
		<property name="packagesToScan" value="com.gl.exchange.model" />
		<property name="jpaProperties">
			<props>
			<!-- 
				<prop key="hibernate.connection.release_mode">after_statement</prop>
				<prop key="hibernate.current_session_context_class">jta</prop>
				<prop key="hibernate.transaction.factory_class">com.atomikos.icatch.jta.hibernate3.AtomikosJTATransactionFactory
				</prop>
				<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup 
					</prop>
			 -->
				<prop key="hibernate.transaction.jta.platform">com.atomikos.icatch.jta.hibernate4.AtomikosJ2eePlatform</prop>

			</props>
		</property>
	</bean>

	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="entityManagerFactory" /> </bean> -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<context:component-scan base-package="com.gl.exchange" />
	<jpa:repositories base-package="com.gl.exchange.repository"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>